name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (without v prefix, e.g. 1.0.0)'
        required: true
        type: string

jobs:
  validate-version:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Validate version format
        run: |
          if ! echo "${{ github.event.inputs.version }}" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "Error: Version must be in format X.Y.Z (e.g. 1.0.0)"
            exit 1
          fi
      - name: Create Tag
        run: |
          git tag "v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build Binaries
    needs: [validate-version]
    if: always() && (github.event_name != 'workflow_dispatch' || success())
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
          - os: linux
            arch: arm64
            goos: linux
            goarch: arm64
          - os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o pithos-${{ matrix.os }}-${{ matrix.arch }} cmd/pithos.go
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: pithos-${{ matrix.os }}-${{ matrix.arch }}
          path: pithos-${{ matrix.os }}-${{ matrix.arch }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Changelog
        id: changelog
        uses: git-chglog/action@v0.15
        with:
          config: .chglog/config.yml
      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          path: binaries
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            binaries/pithos-linux-amd64/pithos-linux-amd64
            binaries/pithos-linux-arm64/pithos-linux-arm64
            binaries/pithos-darwin-amd64/pithos-darwin-amd64
            binaries/pithos-darwin-arm64/pithos-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
